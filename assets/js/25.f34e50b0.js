(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{345:function(t,e,s){"use strict";s.r(e);var a=s(33),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ubuntu-server-walkthrough"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-server-walkthrough"}},[t._v("#")]),t._v(" Ubuntu server walkthrough")]),t._v(" "),s("h2",{attrs:{id:"installing-asp-net-core-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-asp-net-core-runtime"}},[t._v("#")]),t._v(" Installing Asp.Net Core Runtime")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.microsoft.com/ru-ru/dotnet/core/install/linux-package-manager-ubuntu-1804#install-the-aspnet-core-runtime",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link"),s("OutboundLink")],1),t._v(" to instruction.")]),t._v(" "),s("h3",{attrs:{id:"add-repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-repository"}},[t._v("#")]),t._v(" Add repository")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\n\nsudo dpkg -i packages-microsoft-prod.deb\n")])])]),s("h3",{attrs:{id:"install-packages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-packages"}},[t._v("#")]),t._v(" Install packages")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo add-apt-repository universe\nsudo apt-get update\nsudo apt-get install apt-transport-https\nsudo apt-get update\nsudo apt-get install aspnetcore-runtime-3.1\n")])])]),s("h2",{attrs:{id:"install-postgresql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-postgresql"}},[t._v("#")]),t._v(" Install PostgreSql")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.postgresql.org/download/linux/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link"),s("OutboundLink")],1),t._v(" to manual.")]),t._v(" "),s("h3",{attrs:{id:"postgresql-one-more-package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-one-more-package"}},[t._v("#")]),t._v(" PostgreSql one more package")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo apt-get install postgresql-11\n")])])]),s("h3",{attrs:{id:"set-password-for-postgres-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-password-for-postgres-user"}},[t._v("#")]),t._v(" Set password for postgres user")]),t._v(" "),s("h4",{attrs:{id:"postgres-console-opening"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postgres-console-opening"}},[t._v("#")]),t._v(" Postgres console opening")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo -u postgres psql\n")])])]),s("h4",{attrs:{id:"set-user-password"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-user-password"}},[t._v("#")]),t._v(" Set user password")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ALTER USER postgres PASSWORD 'postgres_user_password';\n")])])]),s("p",[t._v("Enter the password instead "),s("code",[t._v("postgres_user_password")])]),t._v(" "),s("h3",{attrs:{id:"create-a-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-database"}},[t._v("#")]),t._v(" Create a database")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("CREATE DATABASE my_site.com;\n")])])]),s("p",[s("code",[t._v("my_site.com")]),t._v(" - database name")]),t._v(" "),s("h2",{attrs:{id:"we-collect-the-project-locally-and-write-to-the-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#we-collect-the-project-locally-and-write-to-the-server"}},[t._v("#")]),t._v(" We collect the project locally and write to the server")]),t._v(" "),s("p",[t._v("Clone the sources of "),s("code",[t._v("SunEngine")]),t._v(" from official "),s("a",{attrs:{href:"https://github.com/sunengine/SunEngine",target:"_blank",rel:"noopener noreferrer"}},[t._v("repository"),s("OutboundLink")],1),t._v(" to your computer.")]),t._v(" "),s("p",[t._v("All build and publication scripts are located in the "),s("code",[t._v("Scripts/")]),t._v(" directory")]),t._v(" "),s("p",[t._v("In the "),s("code",[t._v("Scripts/")]),t._v(" directory, copy the file "),s("code",[t._v("PUBLISH.template")]),t._v(" to"),s("code",[t._v("PUBLISH")]),t._v(" and edit it, setting all the parameters")]),t._v(" "),s("p",[t._v("We assemble the project by executing the script - "),s("code",[t._v("build.sh")]),t._v(" (the folder"),s("code",[t._v("build")]),t._v(" appears in the root directory of the project)")]),t._v(" "),s("p",[t._v("Create the "),s("code",[t._v("/site/my_site.com")]),t._v(" folder on the server. The path can be any.")]),t._v(" "),s("p",[t._v("We put "),s("code",[t._v("build")]),t._v(" on the server, running the script"),s("code",[t._v("publi.sh")])]),t._v(" "),s("p",[t._v("On the server, edit the configuration files in the directory "),s("code",[t._v("/site/my_site.com/Config")])]),t._v(" "),s("h2",{attrs:{id:"connection-settings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#connection-settings"}},[t._v("#")]),t._v(" Connection settings")]),t._v(" "),s("p",[t._v("In the file "),s("code",[t._v("/Config/DataBaseConnection.json")]),t._v(" you must specify the database name, user postgres and password.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n "DataBaseConnection": {   \n    "Linq2dbProvider": "PostgreSQL.9.5",\n    "FluentMigratorProvider": "Postgres",\n    "ConnectionString": "Host=localhost;Database=my_site.com;Username=postgres;Password=postgres_user_password"\n  }\n}\n')])])]),s("h2",{attrs:{id:"fill-the-database-with-initial-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fill-the-database-with-initial-data"}},[t._v("#")]),t._v(" Fill the database with initial data")]),t._v(" "),s("p",[t._v("In the directory "),s("code",[t._v("/site/my_site.com/Server")]),t._v(" run")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("dotnet SunEngine.dll init migrate\n")])])]),s("p",[t._v("This commandline creates tables and other structures in the database and fills with the initial data.")]),t._v(" "),s("p",[t._v("Read more about the "),s("code",[t._v("dotnet SunEngine.dll")]),t._v(" commands in this article.")]),t._v(" "),s("h2",{attrs:{id:"create-a-kestrel-service-on-systemd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-kestrel-service-on-systemd"}},[t._v("#")]),t._v(" Create a kestrel service on systemd")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://kimsereyblog.blogspot.com/2018/05/manage-kestrel-process-with-systemd.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link"),s("OutboundLink")],1),t._v(" to instruction.")]),t._v(" "),s("p",[s("code",[t._v("systemd")]),t._v(" allows after the server starts to constantly keep the necessary processes running, and restart if they are forced to turn off.")]),t._v(" "),s("p",[t._v("Create the file "),s("code",[t._v("my_site.com.service")]),t._v(" in "),s("code",[t._v("/etc/systemd/system")]),t._v(" directory")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  [Unit]\n  Description=SunEngine my_site.com\n\n  [Service]\n  WorkingDirectory=/site/my_site.com\n  ExecStart=/usr/bin/dotnet /site/my_site.com/Server/SunEngine.dll server\n  SyslogIdentifier=my_site.com\n  User=www-data\n  Restart=always\n  RestartSec=10\n  KillSignal=SIGINT\n  Environment=ASPNETCORE_ENVIRONMENT=Production\n\n  [Install]\n  WantedBy=multi-user.target\n")])])]),s("h3",{attrs:{id:"enable-systemd-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enable-systemd-service"}},[t._v("#")]),t._v(" Enable systemd service")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl enable my_site.com\n")])])]),s("h3",{attrs:{id:"commandlines-to-hack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commandlines-to-hack"}},[t._v("#")]),t._v(" Commandlines to hack")]),t._v(" "),s("h4",{attrs:{id:"check-the-systemd-process-logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check-the-systemd-process-logs"}},[t._v("#")]),t._v(" Check the systemd process logs")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("journalctl -fxeu my_site.com\n")])])]),s("h4",{attrs:{id:"restart-systemd-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restart-systemd-process"}},[t._v("#")]),t._v(" Restart systemd process")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl restart my_site.com\n")])])]),s("h2",{attrs:{id:"configuration-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration-nginx"}},[t._v("#")]),t._v(" Configuration Nginx")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://kimsereyblog.blogspot.com/2018/06/asp-net-core-with-nginx.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link"),s("OutboundLink")],1),t._v(" to instruction.")]),t._v(" "),s("h3",{attrs:{id:"installing-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-nginx"}},[t._v("#")]),t._v(" Installing Nginx")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo apt update && sudo apt full-upgrade\nsudo apt install nginx\n")])])]),s("h3",{attrs:{id:"creating-configuration-of-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-configuration-of-nginx"}},[t._v("#")]),t._v(" Creating configuration of Nginx")]),t._v(" "),s("p",[t._v("First create the file "),s("code",[t._v("/etc/nginx/sites-available/my_site.com")]),t._v(" and fill it with")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('server {\n    listen 443 http2; # https port\n    listen [::]:443 http2; # IP v6\n\n    server_name my_site.site; # domen\n\n    charset utf-8;\n\n    ssl on; # turn on ssl\n    ssl_certificate /etc/ssl/mysite.site/my_site.com.crt; # path to ssl sertificate\n    ssl_certificate_key /etc/ssl/mysite.site/my_site.com.key; # path to ssl sertificates key\n\n    gzip on; # enable gzip flow archiving\n    gzip_buffers 16 8k;\n    gzip_comp_level 6;\n    gzip_http_version 1.1;\n    gzip_min_length 256;\n    gzip_proxied any;\n    gzip_vary on;\n    gzip_types text/xml application/atom+xml application/rss+xml application/xhtml+xml text/javascript application/javascript\n        application/x-javascript text/x-json application/json application/x-web-app-manifest+json text/css text/plain\n        text/html font/opentype application/x-font-ttf image/x-icon image/svg+xml;\n    gzip_disable "msie6";\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-XSS-Protection "1; mode=block";\n    add_header X-Content-Type-Options "nosniff";\n\n    location / { # Endpoint to frontend\n        root /site/my_site.com/wwwroot;\n        try_files $uri $uri/ /index.html; # if the file is not found return index.html\n\n        open_file_cache max=1000 inactive=20s; # caching client files on the server\n        open_file_cache_valid 30s;\n        open_file_cache_min_uses 2;\n        open_file_cache_errors on;\n    }\n\n    location ~ \\.(js|json|css|svg|svgz|eot|otf|woff|woff2|ttf|rss|atom|ico|jpg|jpeg|gif|png)$ { # browser caching\n        expires 14d; # keep cache for 14 days\n    }\n\n    location /api/ { # Endpoint to backend. Works as a reverse proxy by sending requests to Kestrel as a separate process.\n        proxy_pass http://localhost:5000/; # The port must match the settings kestrel in "Config/SunEngine.json"\n        client_max_body_size 11M; # maximum request body size that Nginx allows ~= maximum size for upload file\n    }\n}\n\nserver { # redirect in case of login via http\n    listen 80;\n    listen [::]:80;\n    server_name mysite.site;\n    return 301 https://$host$request_uri;\n}\n')])])]),s("h3",{attrs:{id:"activate-my-site-com-settings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#activate-my-site-com-settings"}},[t._v("#")]),t._v(" Activate my_site.com settings")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo ln -s /etc/nginx/sites-available/my_site.com /etc/nginx/sites-enabled/my_site.com\n")])])]),s("h3",{attrs:{id:"reload-nginx-settings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reload-nginx-settings"}},[t._v("#")]),t._v(" Reload Nginx Settings")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo systemctl reload nginx\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);