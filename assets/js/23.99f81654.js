(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{369:function(e,t,n){"use strict";n.r(t);var s=n(43),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"nginx-configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-configuration"}},[e._v("#")]),e._v(" Nginx configuration")]),e._v(" "),n("p",[e._v("The server and client parts are launched at different endpoints, for example, the client part of "),n("code",[e._v("mysite.site")]),e._v(" and the server part of "),n("code",[e._v("mysite.site/api")]),e._v(".")]),e._v(" "),n("h2",{attrs:{id:"http2-https"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http2-https"}},[e._v("#")]),e._v(" HTTP2 + HTTPS")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('server {\n    listen 443 http2;         # https port\n    listen [::]:443 http2;    # IP v6\n\n    server_name mysite.site;  # домен\n\n    charset utf-8;\n\n    ssl on;    # turn on ssl\n    ssl_certificate /etc/ssl/mysite.site/mysite.ite.srt;         # Path to ssl sertivicate\n    ssl_certificate_key /etc/ssl/mysite.site/mysite.site.key;    # Path to ssl sertivicate\'s key\n    gzip on;   # turn on gzip data flow\n\n    gzip_buffers 16 8k;\n    gzip_comp_level 6;\n    gzip_http_version 1.1;\n    gzip_min_length 256;\n    gzip_proxied any;\n    gzip_vary on;\n    gzip_types text/xml application/atom+xml application/rss+xml application/xhtml+xml text/javascript application/javascript\n    application/x-javascript text/x-json application/json application/x-web-app-manifest+json text/css text/plain\n    text/html font/opentype application/x-font-ttf image/x-icon image/svg+xml;\n    gzip_disable "msie6";\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-XSS-Protection "1; mode=block";\n    add_header X-Content-Type-Options "nosniff";\n\n    # Endpoint for the client\n    location / {   \n       root /site/mysite.site/wwwroot;\n       try_files $uri $uri/ /index.html;   # if the file is not found, return index.html\n\n       open_file_cache max=1000 inactive=20s; # caching client files on the server\n       open_file_cache_valid 30s;\n       open_file_cache_min_uses 2;\n       open_file_cache_errors on;\n\n       # browser caching\n       location ~ \\.(js|json|css|svg|svgz|eot|otf|woff|woff2|ttf|rss|atom|ico|jpg|jpeg|gif|png)$ {\n           expires 14d; # keep cache for 14 days\n       }\n    }\n    # Endpoint for the server side. Works as a reverse proxy by sending requests to Kestrel as a separate process.\n    location /api/ {   \n           proxy_pass http://localhost:5000/; # The port must match the kestrel settings in SunEngine.json\n           client_max_body_size 11M;  # maximum request body size that Nginx allows ~ = maximum size for upload file\n    }\n\nserver {  # redirect in case of login via http\n    listen 80;\n    listen [::]:80;\n\n    server_name mysite.site;\n    return 301 https://$host$request_uri;\n}\n')])])]),n("p",[e._v("To work, you need to start the "),n("code",[e._v("Kestrel")]),e._v(" service as a separate process.")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://kimsereyblog.blogspot.com/2018/05/manage-kestrel-process-with-systemd.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Instructions in the article"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("The Kestrel port in "),n("code",[e._v("/Config/SunEngine.json")]),e._v(" must match the configuration port in "),n("code",[e._v("nginx")]),e._v(".")]),e._v(" "),n("h2",{attrs:{id:"http"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[e._v("#")]),e._v(" HTTP")]),e._v(" "),n("p",[e._v("Use only for development or testing purposes. Do not use on "),n("code",[e._v("production")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('server {\n    listen 80; # http port\n    listen [::]:80;\n\n    server_name mysite.site; # domen\n         \n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-XSS-Protection "1; mode=block";\n    add_header X-Content-Type-Options "nosniff";\n     \n    charset utf-8;\n         \n    # Endpoint for the client\n    location / {   \n       root /site/mysite.site/wwwroot;\n       try_files $uri $uri/ /index.html;   # if the file is not found, return index.html\n     }\n\n    #   Endpoint for the server side. Works as a reverse proxy by sending requests to Kestrel running as a separate process.\n    location /api/ {   \n       proxy_pass  http://localhost:5000/;   # The port must match the kestrel settings in "/Config/SunEngine.json"\n            \n       client_max_body_size 11M;  #   maximum request body size that Nginx allows ~= maximum size for upload file\n    }\n}\n')])])])])}),[],!1,null,null,null);t.default=i.exports}}]);