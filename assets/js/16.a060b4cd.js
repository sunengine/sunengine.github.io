(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{336:function(e,t,n){"use strict";n.r(t);var a=n(33),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"launch-for-development"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#launch-for-development"}},[e._v("#")]),e._v(" Launch for development")]),e._v(" "),n("h3",{attrs:{id:"create-a-database"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create-a-database"}},[e._v("#")]),e._v(" Create a database")]),e._v(" "),n("p",[e._v('If there is no "Config" directory, copy it from "Config.template".\nCreate a database <data_base_name> on any compatible subdirectory and register the settings and connection string in the file "/SunEngine/Config/DataBaseConnection.json".')]),e._v(" "),n("h3",{attrs:{id:"launch-from-the-console"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#launch-from-the-console"}},[e._v("#")]),e._v(" Launch from the console")]),e._v(" "),n("p",[e._v('In the folder "SunEngine / Server / SunEngine.Cli".\nFill the database with the initial data "dotnet run migrate init seed" (if not done).\nWe start the server "dotnet run server".\nIn the folder "SunEngine / Client".\nInstall npm modules "yarn install" or "npm install" (if not done).\nWe start the client "quasar dev" - the browser with the site will open.')]),e._v(" "),n("h3",{attrs:{id:"launch-from-rider-ide"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#launch-from-rider-ide"}},[e._v("#")]),e._v(" Launch from Rider IDE")]),e._v(" "),n("p",[e._v('At the first start, it is necessary to perform paragraphs 1,2,4,7 (see above).\nThe server part is launched by the start of the project "/Server/SunEngine.Cli".\nAdding a client to the Solution explorer panel:\nRight-click on SunEngine Solution -> "Add" -> "Attach Existing Folder" -> select the folder "SunEngine / Client".')]),e._v(" "),n("h3",{attrs:{id:"open-the-npm-menu"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#open-the-npm-menu"}},[e._v("#")]),e._v(" Open the npm menu:")]),e._v(" "),n("p",[e._v('On "package.json", right-click -> "Tools" -> "Show npm Scripts".\nThe client part is launched through the npm script "dev run".')]),e._v(" "),n("h3",{attrs:{id:"tags"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tags"}},[e._v("#")]),e._v(" Tags:")]),e._v(" "),n("p",[e._v("dev")]),e._v(" "),n("p",[e._v("dev run")]),e._v(" "),n("p",[e._v("run")]),e._v(" "),n("p",[e._v("launch")]),e._v(" "),n("p",[e._v("Dmitry Oceanij")]),e._v(" "),n("p",[e._v("05/30/2019 13:39# Launch for development")]),e._v(" "),n("h2",{attrs:{id:"create-a-database-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create-a-database-2"}},[e._v("#")]),e._v(" Create a database")]),e._v(" "),n("p",[e._v("If there is no "),n("code",[e._v("Config")]),e._v(" directory in the project root, you need to copy it from"),n("code",[e._v("Config.dev.template")]),e._v(". In other words, it is necessary to create a "),n("code",[e._v("Config")]),e._v(" directory in the project root with the same contents as"),n("code",[e._v("Config.dev.template")]),e._v(" in the project root.")]),e._v(" "),n("p",[e._v("Create the database "),n("code",[e._v("<data_base_name>")]),e._v(" on any compatible subdirectory and write the settings and connection string to the file "),n("code",[e._v("/ SunEngine / Config / DataBaseConnection.json")]),e._v(".")]),e._v(" "),n("h2",{attrs:{id:"launch-from-the-console-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#launch-from-the-console-2"}},[e._v("#")]),e._v(" Launch from the console")]),e._v(" "),n("p",[e._v("In the directory "),n("code",[e._v("SunEngine / Server / SunEngine.Cli")]),e._v(".")]),e._v(" "),n("p",[e._v("Fill the database with the initial data "),n("code",[e._v("dotnet run migrate init seed")]),e._v(" (if not done).")]),e._v(" "),n("p",[e._v("We start the server with the "),n("code",[e._v("dotnet run server")]),e._v(" command in the"),n("code",[e._v("SunEngine / Client")]),e._v(" directory.")]),e._v(" "),n("p",[e._v("Install the * npm * modules "),n("code",[e._v("yarn install")]),e._v(" or"),n("code",[e._v("npm install")]),e._v(" (if not done).")]),e._v(" "),n("p",[e._v("We start the client "),n("code",[e._v("quasar dev")]),e._v(" - the browser with the site will open.")]),e._v(" "),n("h2",{attrs:{id:"launch-from-rider-ide-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#launch-from-rider-ide-2"}},[e._v("#")]),e._v(" Launch from Rider IDE")]),e._v(" "),n("p",[e._v("At the first start, it is necessary to carry out the items "),n("code",[e._v("1")]),e._v(","),n("code",[e._v("2")]),e._v(", "),n("code",[e._v("4")]),e._v(","),n("code",[e._v("7")]),e._v(" (see above).")]),e._v(" "),n("p",[e._v("The server part is started by the start of the "),n("code",[e._v("/ Server / SunEngine.Cli")]),e._v(" project.")]),e._v(" "),n("p",[e._v("To start the client part, you need to perform the “Add client to the panel” "),n("code",[e._v("Solution explorer")]),e._v(" by right-clicking on the"),n("code",[e._v("SunEngine Solution -> Add -> Attach Existing Folder ->")]),e._v("select the directory"),n("code",[e._v("SunEngine / Client")]),e._v(".")]),e._v(" "),n("p",[e._v("Next, open the "),n("code",[e._v("npm")]),e._v(" menu and execute:")]),e._v(" "),n("ul",[n("li",[e._v("on the file "),n("code",[e._v("package.json")]),e._v(", right-click on the mouse"),n("code",[e._v("Tools -> Show npm Scripts")]),e._v(";")]),e._v(" "),n("li",[e._v("the client part is launched through the * npm * script "),n("code",[e._v("dev run")]),e._v(".")])])])}),[],!1,null,null,null);t.default=r.exports}}]);